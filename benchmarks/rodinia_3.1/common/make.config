# CUDA toolkit installation path
CUDA_DIR = /usr/local/cuda

# CUDA toolkit libraries
CUDA_LIB_DIR := $(CUDA_DIR)/lib
ifeq ($(shell uname -m), x86_64)
     ifeq ($(shell if test -d $(CUDA_DIR)/lib64; then echo T; else echo F; fi), T)
     	CUDA_LIB_DIR := $(CUDA_DIR)/lib64
     endif
endif

# CUDA SDK installation path
#SDK_DIR = $(HOME)/NVIDIA_GPU_Computing_SDK/C
SDK_DIR = /usr/local/cuda-5.5/samples/
#SDK_DIR =/if10/kw5na/NVIDIA_CUDA_Computing_SDK4/C

# OPENCL

# NVIDIA_DIR

# OPENCL_DIR =/if10/kw5na/NVIDIA_GPU_Computing_SDK4
# OPENCL_INC = $(OPENCL_DIR)/OpenCL/common/inc
# OPENCL_LIB = $(OPENCL_DIR)/OpenCL/common/lib -lOpenCL

# AMD_DIR
OPENCL_DIR = /if10/kw5na/Packages/AMD-APP-SDK-v2.8-RC-lnx64
OPENCL_INC = $(OPENCL_DIR)/include/ 
OPENCL_LIB = $(OPENCL_DIR)/lib/x86_64/ -lOpenCL
#ifeq ($(shell uname -m), x86_64)
#     ifeq ($(shell if test -d $(OPENCL_DIR)/lib/x86_64/; then echo T; else echo F; fi), T)
#     	OPENCL_LIB = $(OPENCL_DIR)/lib/x86_64/
#     endif
#endif



ifndef $(INJECT_CODE_CLANG)
INJECT_CODE_CLANG = 0
endif

ifeq ($(INJECT_CODE_CLANG), 1)
INST_FLAGS = -g -c -emit-llvm -include ${HOME}/FloatGuard/inst_pass/Inst/InstStub.h -DEXP_FLAG_TOTAL=0x5F2F0 -Xclang -load -Xclang ${HOME}/FloatGuard/clang-examples/FloatGuard-plugin/FloatGuard-plugin.so -Xclang -plugin -Xclang inject-fp-exception 
else
INST_FLAGS = -g -include ${HOME}/FloatGuard/inst_pass/Inst/InstStub.h -DEXP_FLAG_TOTAL=0x5F2F0 #-fpass-plugin=${HOME}/FloatGuard/inst_pass/libInstPass.so
endif

ifndef $(INJECT_CODE_LLVM)
INJECT_CODE_LLVM = 0
endif

ifeq ($(INJECT_CODE_LLVM), 1)
INST_FLAGS += -fpass-plugin=${HOME}/FloatGuard/inst_pass/libInstPass.so
endif